trigger: none

pool:
  vmImage: ubuntu-latest

variables:
  - group: rest-app-infra-group
  - name: workingDirectory
    value: "$(Build.SourcesDirectory)/terraform/RestAppInfra"

stages:
  - stage: validate
    jobs:
      - job: validate
        continueOnError: false
        steps:
          - task: TerraformInstaller@1
            displayName: terraform install
            inputs:
              terraformVersion: "latest"
          - task: TerraformTaskV3@3
            displayName: init
            inputs:
              provider: "azurerm"
              command: "init"
              backendServiceArm: "$(defaultServiceName)"
              backendAzureRmResourceGroupName: "$(backendAzureRmResourceGroupName)"
              backendAzureRmStorageAccountName: "$(backendAzureRmStorageAccountName)"
              backendAzureRmContainerName: "$(backendAzureRmContainerName)"
              backendAzureRmKey: "$(backendAzureRmKey)"
              workingDirectory: "$(workingDirectory)"
          - task: TerraformTaskV3@3
            displayName: validate
            inputs:
              provider: "azurerm"
              command: "validate"
              workingDirectory: "$(workingDirectory)"
  - stage: apply
    condition: succeeded('validate')
    dependsOn: validate
    jobs:
      - job: apply
        steps:
          - task: TerraformInstaller@1
            displayName: terraform install
            inputs:
              terraformVersion: "latest"
          - task: TerraformTaskV3@3
            displayName: init
            inputs:
              provider: "azurerm"
              command: "init"
              backendServiceArm: "$(defaultServiceName)"
              backendAzureRmResourceGroupName: "$(backendAzureRmResourceGroupName)"
              backendAzureRmStorageAccountName: "$(backendAzureRmStorageAccountName)"
              backendAzureRmContainerName: "$(backendAzureRmContainerName)"
              backendAzureRmKey: "$(backendAzureRmKey)"
              workingDirectory: "$(workingDirectory)"
          - task: TerraformTaskV3@3
            displayName: plan
            inputs:
              provider: "azurerm"
              command: "plan"
              environmentServiceNameAzureRM: "$(defaultServiceName)"
              workingDirectory: "$(workingDirectory)"
          - task: TerraformTaskV3@3
            displayName: apply
            inputs:
              provider: "azurerm"
              command: "apply"
              environmentServiceNameAzureRM: "$(defaultServiceName)"
              workingDirectory: "$(workingDirectory)"

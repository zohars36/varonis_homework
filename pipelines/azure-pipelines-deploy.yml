# Python to Linux Web App on Azure
# Build your Python project and deploy it to Azure as a Linux Web App.
# Change python version to one thats appropriate for your application.
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

parameters:
  - name: envType
    displayName: env type
    type: string
    default: dev
    values:
      - dev
      - staging
      - prod

  - name: instanceNo
    displayName: instance number (1-9)?
    type: string
    default: "1"

# trigger: none
trigger:
  branches:
    include:
      - main
  paths:
    include:
      - restapp/src

variables:
  - group: rest-app-infra-group
  - name: webAppName
    value: rest${{ parameters.envType }}no${{ parameters.instanceNo }}-webapp
  - name: vmImageName
    value: "ubuntu-latest"
  - name: environmentName
    value: rest${{ parameters.envType }}no${{ parameters.instanceNo }}-env
  - name: projectRoot
    value: $(System.DefaultWorkingDirectory)/restapp/src
  - name: pythonVersion
    value: "3.12"

stages:
  - stage: Build
    displayName: Build stage
    jobs:
      - job: BuildJob
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: "$(pythonVersion)"
            displayName: "Use Python $(pythonVersion)"

          - script: |
              python -m venv antenv
              source antenv/bin/activate
              python -m pip install --upgrade pip
              pip install setup
              ls -la
              pip install -r ../requirements.txt
            workingDirectory: $(projectRoot)
            displayName: "Install requirements"

          - task: ArchiveFiles@2
            displayName: "Archive files"
            inputs:
              rootFolderOrFile: "$(projectRoot)"
              includeRootFolder: false
              archiveType: zip
              archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
              replaceExistingArchive: true

          - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
            displayName: "Upload package"
            artifact: drop

  - stage: Deploy
    displayName: "Deploy Web App"
    dependsOn: Build
    condition: succeeded()
    jobs:
      - deployment: DeploymentJob
        pool:
          vmImage: $(vmImageName)
        environment: $(environmentName)
        strategy:
          runOnce:
            deploy:
              steps:
                - task: UsePythonVersion@0
                  inputs:
                    versionSpec: "$(pythonVersion)"
                  displayName: "Use Python version"

                - task: AzureWebApp@1
                  displayName: "Deploy Azure Web App : $(webAppName)"
                  inputs:
                    azureSubscription: $(defaultServiceName)
                    appName: $(webAppName)
                    package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
